{"version":3,"sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["FormContainer","Label","Input","Icon","MdPersonAdd","Button","Form","state","name","number","nameId","nanoid","numberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","this","htmlFor","type","pattern","title","required","id","onChange","Component","FilterContainer","Filter","List","MdDeleteForever","ListItem","ContactList","getContact","onDeleteContact","map","onClick","Container","Phonebook","Contacts","Empty","App","contacts","filter","setContact","data","normalizedName","toLowerCase","isContact","find","contact","includes","alert","changeFilter","normalizedFilter","deleteContact","contactId","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","visibleContact","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.797ab0ef.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\nimport { MdPersonAdd } from 'react-icons/md';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 500px;\n\n  margin: 0 auto;\n\n  border: 1px solid var(--bs-gray-600);\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 20px;\n`;\n\nexport const Icon = styled(MdPersonAdd)`\n  font-size: 20px;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 10px;\n\n  background-color: var(--bs-cyan);\n  color: var(--bs-light);\n\n  box-shadow: 0 3px var(--bs-info);\n  border-radius: 5px;\n\n  &:hover {\n    background-color: var(--bs-info);\n    box-shadow: 0 3px var(--bs-cyan);\n  }\n\n  &:active {\n    margin-top: 2px;\n    margin-bottom: -2px;\n    background-color: var(--bs-cyan);\n    box-shadow: 0 -2px 0 0 var(--bs-info);\n  }\n`;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { FormContainer, Label, Input, Button, Icon } from './Form.styled';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetState();\n  };\n  resetState = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <FormContainer onSubmit={this.handleSubmit}>\n        <Label htmlFor={this.nameId}>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={this.nameId}\n          value={name}\n          onChange={this.handleChange}\n        />\n\n        <Label htmlFor={this.numberId}>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={this.numberId}\n          value={number}\n          onChange={this.handleChange}\n        />\n\n        <Button type=\"submit\">\n          <Icon />\n          Add contact\n        </Button>\n      </FormContainer>\n    );\n  }\n}\n","import styled from '@emotion/styled/macro';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 10px;\n\n  span {\n    margin-bottom: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FilterContainer, Label } from './Filter.styled';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <FilterContainer>\n      <Label>\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={value}\n          onChange={onChange}\n        />\n      </Label>\n    </FilterContainer>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\nimport { MdDeleteForever } from 'react-icons/md';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 0 auto;\n  margin-top: 30px;\n  width: 500px;\n`;\n\nexport const Icon = styled(MdDeleteForever)`\n  font-size: 20px;\n  margin-right: 10px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  padding: 10px;\n  align-items: center;\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px;\n  margin-left: 20px;\n\n  background-color: var(--bs-cyan);\n  color: var(--bs-light);\n\n  box-shadow: 0 3px var(--bs-info);\n  border-radius: 5px;\n\n  &:hover {\n    background-color: var(--bs-info);\n    box-shadow: 0 3px var(--bs-cyan);\n  }\n\n  &:active {\n    margin-top: 2px;\n    margin-bottom: -2px;\n    background-color: var(--bs-cyan);\n    box-shadow: 0 -2px 0 0 var(--bs-info);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, ListItem, Button, Icon } from './ContactList.styled';\n\nexport default function ContactList({ getContact, onDeleteContact }) {\n  return (\n    <List>\n      {getContact.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <p>{`${name}: ${number}`}</p>\n          <Button onClick={() => onDeleteContact(id)}>\n            <Icon />\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  getContact: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const Phonebook = styled.h1`\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Contacts = styled.h2`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Empty = styled.p`\n  text-align: center;\n  padding-top: 30px;\n`;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { Container, Phonebook, Contacts, Empty } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  setContact = data => {\n    const { contacts } = this.state;\n    const normalizedName = data.name.toLowerCase();\n\n    const isContact = contacts.find(contact => {\n      return contact.name.toLowerCase().includes(normalizedName);\n    });\n\n    if (isContact) {\n      return alert(`${data.name} is already in contacts`);\n    }\n\n    const contact = { id: nanoid(), ...data };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n      filter: '',\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const { setContact, changeFilter, getContact } = this;\n    const visibleContact = getContact();\n\n    return (\n      <Container>\n        <Phonebook>Phonebook</Phonebook>\n        <Form onSubmit={setContact} />\n        <Contacts>Contacts</Contacts>\n        <Filter value={filter} onChange={changeFilter} />\n        {contacts.length > 0 && (\n          <ContactList\n            getContact={visibleContact}\n            onDeleteContact={this.deleteContact}\n          />\n        )}\n        {!contacts.length && <Empty>Phonebook is Empty</Empty>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}