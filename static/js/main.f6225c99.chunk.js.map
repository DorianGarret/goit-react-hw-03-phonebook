{"version":3,"sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["FormContainer","Label","Input","Button","Form","state","name","number","nameId","nanoid","numberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","id","onChange","size","style","marginRight","Component","FilterContainer","Filter","inputSearchId","List","ListItem","ContactList","getContact","onDeleteContact","map","onClick","Container","Phonebook","Contacts","Empty","App","contacts","initialContacts","filter","setContact","data","normalizedName","toLowerCase","isContact","find","contact","includes","alert","changeFilter","normalizedFilter","deleteContact","contactId","visibleContact","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6225c99.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 500px;\n\n  margin: 0 auto;\n\n  border: 1px solid var(--bs-gray-600);\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 10px;\n\n  background-color: var(--bs-cyan);\n  color: var(--bs-light);\n\n  box-shadow: 0 3px var(--bs-info);\n  border-radius: 5px;\n\n  &:hover {\n    background-color: var(--bs-info);\n    box-shadow: 0 3px var(--bs-cyan);\n  }\n\n  &:active {\n    margin-top: 2px;\n    margin-bottom: -2px;\n    background-color: var(--bs-cyan);\n    box-shadow: 0 -2px 0 0 var(--bs-info);\n  }\n`;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { MdPersonAdd } from 'react-icons/md';\nimport { FormContainer, Label, Input, Button } from './Form.styled';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <FormContainer onSubmit={this.handleSubmit}>\n        <Label htmlFor={this.nameId}>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={this.nameId}\n          value={name}\n          onChange={this.handleChange}\n        />\n\n        <Label htmlFor={this.numberId}>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={this.numberId}\n          value={number}\n          onChange={this.handleChange}\n        />\n\n        <Button type=\"submit\">\n          <MdPersonAdd size={20} style={{ marginRight: 10 }} />\n          Add contact\n        </Button>\n      </FormContainer>\n    );\n  }\n}\n","import styled from '@emotion/styled/macro';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { FilterContainer, Label } from './Filter.styled';\n\nexport default function Filter({ value, onChange }) {\n  const inputSearchId = nanoid();\n  return (\n    <FilterContainer>\n      <Label htmlFor={inputSearchId}>Find contacts by name</Label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={value}\n        id={inputSearchId}\n        onChange={onChange}\n      />\n    </FilterContainer>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 0 auto;\n  margin-top: 30px;\n  width: 500px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  padding: 10px;\n  align-items: center;\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px;\n  margin-left: 20px;\n\n  background-color: var(--bs-cyan);\n  color: var(--bs-light);\n\n  box-shadow: 0 3px var(--bs-info);\n  border-radius: 5px;\n\n  &:hover {\n    background-color: var(--bs-info);\n    box-shadow: 0 3px var(--bs-cyan);\n  }\n\n  &:active {\n    margin-top: 2px;\n    margin-bottom: -2px;\n    background-color: var(--bs-cyan);\n    box-shadow: 0 -2px 0 0 var(--bs-info);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { List, ListItem, Button } from './ContactList.styled';\n\nexport default function ContactList({ getContact, onDeleteContact }) {\n  return (\n    <List>\n      {getContact.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <p>{`${name}: ${number}`}</p>\n          <Button onClick={() => onDeleteContact(id)}>\n            <MdDeleteForever style={{ marginRight: 10 }} />\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  getContact: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const Phonebook = styled.h1`\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Contacts = styled.h2`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Empty = styled.p`\n  text-align: center;\n  padding-top: 30px;\n`;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport initialContacts from 'data/contacts.json';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { Container, Phonebook, Contacts, Empty } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  setContact = data => {\n    const { contacts } = this.state;\n    const normalizedName = data.name.toLowerCase();\n\n    const isContact = contacts.find(contact => {\n      return contact.name.toLowerCase().includes(normalizedName);\n    });\n\n    if (isContact) {\n      return alert(`${data.name} is already in contacts`);\n    }\n\n    const contact = { id: nanoid(), ...data };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n      filter: '',\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const { setContact, changeFilter, getContact } = this;\n    const visibleContact = getContact();\n\n    return (\n      <Container>\n        <Phonebook>Phonebook</Phonebook>\n        <Form onSubmit={setContact} />\n        <Contacts>Contacts</Contacts>\n        <Filter value={filter} onChange={changeFilter} />\n        {contacts.length ? (\n          <ContactList\n            getContact={visibleContact}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <Empty>Phonebook is Empty</Empty>\n        )}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}